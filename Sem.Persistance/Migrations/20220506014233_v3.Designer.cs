// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sem.Persistance.Context;

namespace Sem.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220506014233_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Sem.Domain.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.HistoricalCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Felices")
                        .HasColumnType("int");

                    b.Property<int>("Horas")
                        .HasColumnType("int");

                    b.Property<int>("Proyectos")
                        .HasColumnType("int");

                    b.Property<int>("Trabajadores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.Navigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Current")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Href")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Navigations");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Topics");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Topic");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.Blog", b =>
                {
                    b.HasBaseType("Sem.Domain.External.Entities.Topic");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext")
                        .HasColumnName("Blog_ImagePath");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Blog");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.Contact", b =>
                {
                    b.HasBaseType("Sem.Domain.External.Entities.Topic");

                    b.Property<string>("Href")
                        .HasColumnType("longtext");

                    b.Property<string>("Target")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Contact");
                });

            modelBuilder.Entity("Sem.Domain.External.Entities.Service", b =>
                {
                    b.HasBaseType("Sem.Domain.External.Entities.Topic");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
